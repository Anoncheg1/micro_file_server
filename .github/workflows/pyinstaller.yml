name: Package Application with Pyinstaller

on:
  workflow_dispatch
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]


jobs:
  build:
    runs-on: windows-2019

    steps:
    - name: Checkout
      # uses: actions/checkout@v4
      shell: bash
      run: |
        cd .. # because we are in repository_name already
        git clone --no-tags --no-recurse-submodules --depth=1 \
          --progress --single-branch --branch main \
          https://github.com/Anoncheg1/micro_file_server
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
        architecture: 'x64'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
        pip install -r .github/requirements.txt
        pip install pyinstaller
        # idk what is build
    - name: Run PyInstaller
      run: |
        pyinstaller --onefile --collect-all flask --name micro-file-server micro_file_server/__main__.py
        sha512sum ./dist/micro-file-server.exe > ./dist/micro-file-server.exe.sha512
    - name: Create a Release
      env:
        GH_TOKEN: ${{ github.token }} # secrets.GITHUB_TOKEN github.token?
      shell: bash
      run: |
        sha=${{ GITHUB.SHA }}
        date_str=$(date +%H-%Mm%SsUTC%Y-%m-%d)
        gh release create "${sha:0:7}_$date_str" --generate-notes ./dist/*{.exe,.exe.sha512}
        # ${{ GITHUB.SHA }} - Error, branch or tag names consisting of 40 hex characters are not allowed.
        # env: GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # "$(date +%Y%m%d%H%M%S)" --generate-notes ./dist/*.exe
        # you may want to replace with special TOKEN
      # uses: elgohr/Github-Release-Action@v5
      # env:
      #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # with:
      #   title: MyReleaseMessage

    # - name: create release
    #     id: create_release
    #     uses: actions/create-release@v1
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #       tag_name: ${{ github.event.head_commit.message }}
    #       release_name: ${{ github.event.head_commit.message }}
    #       overwrite: true
    #       body: |
    #         Test Release v1.0.0
    #       draft: false
    #       prerelease: false
    # - name: Build package
    #   run: python -m build
    # - uses: actions/upload-artifact@v2
    #   with:
    #     name: name-of-artifact
    #     path: dist/windows
