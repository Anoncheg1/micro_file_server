# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: "Release to exe, source and sourceforge"

on:
  release:
    types: [published]

# permissions:
#   contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        shell: bash
        run: |
          cd .. # because we are in repository_name already
          git clone --no-tags --no-recurse-submodules --depth=1 \
            --progress --single-branch --branch main \
            https://github.com/Anoncheg1/micro_file_server
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
          pip install -r .github/requirements.txt
          pip install pyinstaller
          # idk what is build
      - name: Run PyInstaller
        run: |
          pyinstaller --onefile --collect-all flask --name micro-file-server micro_file_server/__main__.py
          sha512sum ./dist/micro-file-server.exe > ./dist/micro-file-server.exe.sha512
      - name: Create a Release
        env:
          GH_TOKEN: ${{ github.token }} # secrets.GITHUB_TOKEN
        shell: bash
        run: |
          sha=${{ GITHUB.SHA }}
          gh release create ${{ github.ref_name }} --generate-notes ./dist/*{.exe,.exe.sha512}
        # if: startsWith(github.ref, 'refs/tags')

    # - uses: actions/checkout@v3
    # - name: Set up Python
    #   uses: actions/setup-python@v3
    #   with:
    #     python-version: '3.x'
    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install build
    # - name: Build package
    #   run: python -m build
    # - name: Publish package
    #   uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
    #   with:
    #     user: __token__
    #     password: ${{ secrets.PYPI_API_TOKEN }}
